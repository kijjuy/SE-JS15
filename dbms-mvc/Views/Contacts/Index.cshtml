@model IEnumerable<Contact>
@using dbms_mvc.Models

    @{
	int maxPerPage = 50;
	ViewData["Title"] = "Index";
    	var props = typeof(Contact).GetProperties().ToList();
    	props = props.Where(p => p.Name != "ContactId").ToList();

    	int page = ViewBag.page ?? 1;

	string prevDisabled = page <= 1 ? "disabled" : "";
    }

    <style>
        .search-box {
            margin-bottom: 20px;
        }

        .table th,
        .table td {
            vertical-align: middle;
        }
    </style>

    <h1>Index</h1>

    <a asp-action="Create" class="btn btn-success">Create New</a>

    <div id="downloadButton" class="btn btn-primary">Download</div>

    <table class="table table-striped table-hover table-bordered">
        <thead class="thead-dark">
	    <tr id="form-row">
		<form asp-action="Index" asp-controller="Contacts" method="post">
		    <button type="submit" class="btn btn-primary">Search</button>
		    @foreach(var prop in props)
		    {
			<td>
			    <input name="@prop.Name" type="text" value='@ViewData["prop-" + prop.Name]'>
			</td>
		    }
		</form>
	    </tr>
            <tr>
                <th>@Html.DisplayNameFor(model => model.FirstName)</th>
                <th>@Html.DisplayNameFor(model => model.LastName)</th>
                <th>@Html.DisplayNameFor(model => model.Organization)</th>
                <th>@Html.DisplayNameFor(model => model.Title)</th>
                <th>@Html.DisplayNameFor(model => model.StreetAddress1)</th>
                <th>@Html.DisplayNameFor(model => model.City)</th>
                <th>@Html.DisplayNameFor(model => model.Province)</th>
                <th>@Html.DisplayNameFor(model => model.PostalCode)</th>
                <th>@Html.DisplayNameFor(model => model.Subscribed)</th>
                <th>@Html.DisplayNameFor(model => model.Email)</th>
                <th>@Html.DisplayNameFor(model => model.Phone)</th>
                <th>@Html.DisplayNameFor(model => model.HomeCategory)</th>
                <th>@Html.DisplayNameFor(model => model.Fax)</th>
                <th>@Html.DisplayNameFor(model => model.Website)</th>
                <th>@Html.DisplayNameFor(model => model.BedsCount)</th>
                <th>@Html.DisplayNameFor(model => model.Address2)</th>
                <th>@Html.DisplayNameFor(model => model.Extension)</th>
                <th>@Html.DisplayNameFor(model => model.MailingList)</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
            <tr>
                <td>@Html.DisplayFor(modelItem => item.FirstName)</td>
                <td>@Html.DisplayFor(modelItem => item.LastName)</td>
                <td>@Html.DisplayFor(modelItem => item.Organization)</td>
                <td>@Html.DisplayFor(modelItem => item.Title)</td>
                <td>@Html.DisplayFor(modelItem => item.StreetAddress1)</td>
                <td>@Html.DisplayFor(modelItem => item.City)</td>
                <td>@Html.DisplayFor(modelItem => item.Province)</td>
                <td>@Html.DisplayFor(modelItem => item.PostalCode)</td>
                <td>@Html.DisplayFor(modelItem => item.Subscribed)</td>
                <td>@Html.DisplayFor(modelItem => item.Email)</td>
                <td>@Html.DisplayFor(modelItem => item.Phone)</td>
                <td>@Html.DisplayFor(modelItem => item.HomeCategory)</td>
                <td>@Html.DisplayFor(modelItem => item.Fax)</td>
                <td>@Html.DisplayFor(modelItem => item.Website)</td>
                <td>@Html.DisplayFor(modelItem => item.BedsCount)</td>
                <td>@Html.DisplayFor(modelItem => item.Address2)</td>
                <td>@Html.DisplayFor(modelItem => item.Extension)</td>
                <td>@Html.DisplayFor(modelItem => item.MailingList)</td>
                <td>
                    <a asp-action="Edit" asp-route-id="@item.ContactId" class="btn btn-primary btn-sm">Edit</a>
                    <a asp-action="Details" asp-route-id="@item.ContactId" class="btn btn-secondary btn-sm">Details</a>
                    <a asp-action="Delete" asp-route-id="@item.ContactId" class="btn btn-danger btn-sm">Delete</a>
                </td>
            </tr>
            }
        </tbody>
    </table>

    <div id="page-buttons">
	<div class="btn btn-info @prevDisabled">Previous Page</div>
    </div>




    @section scripts {
    <script>
        const url = "/Contacts/Export";
        const model = @Html.Raw(Json.Serialize(Model));

        function sendDownloadRequest() {
            $.ajax({
                type: "POST",
                url: url,
                contentType: "application/json",
                dataType: "binary",
                data: JSON.stringify(model),
	      xhrFields: {
		responseType: 'blob'
	      },
                success: function (data, status, xhr) {
		  //TODO: Stop logging data
		  if(status === "success") {
		    const url = URL.createObjectURL(data);
		    const a = document.createElement("a");
		    a.href = url;
		    a.download = "contacts.xlsx";
		    document.body.appendChild(a);
		    a.click();
		  }
                },
                error: function (xhr, textStatus, errorThrown) {
		  console.log("error");
		  console.log(/*xhr, */textStatus, errorThrown);
                }
            });
        }

        $(document).ready(function() {
            $("#downloadButton").click(function() {
                sendDownloadRequest();
                console.log(model);
            });
        });
    </script>
    }
